{"version":3,"sources":["Components/Card/Card.module.scss","Components/Card/Card.js","Components/Game/Game.js","App.js","reportWebVitals.js","index.js","Components/Game/Game.module.scss"],"names":["module","exports","Card","props","card","createRef","className","classes","ref","this","data-icon","icon","onClick","clicked","current","inner","front","src","alt","back","Component","shuffle","a","i","length","j","Math","floor","random","icons","concat","Game","state","remaining","clickedOnce","currentCard","newGameBtnDisabled","movesCounter","cardClickHandler","setState","prevState","classList","add","classesCard","visible","dataset","cards","document","querySelectorAll","style","pointerEvents","setTimeout","remove","startNewGame","activeCards","map","index","cardsWrapper","winInfo","disabled","newGameBtn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.61dbb47f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__1_VSS\",\"inner\":\"Card_inner__2HV3G\",\"front\":\"Card_front__2kkwa\",\"back\":\"Card_back__2h5zr\",\"visible\":\"Card_visible__peKao\"};","import React, { Component, createRef } from 'react';\r\nimport classes from './Card.module.scss';\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.card = createRef();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div \r\n                className={classes.Card}\r\n                ref={this.card}\r\n                data-icon={this.props.icon}\r\n                onClick={() => this.props.clicked(this.card.current)}>\r\n                <div className={classes.inner}>\r\n                    <div className={classes.front}>\r\n                        <img src={'icons/' + this.props.icon} alt=\"front icon\"/>\r\n                    </div>\r\n                    <div className={classes.back}>\r\n                        <img src={'icons/empire.svg'} alt=\"back icon\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport classes from './Game.module.scss';\r\n\r\nimport Card from '../Card/Card';\r\nimport classesCard from '../Card/Card.module.scss';\r\n\r\n/**\r\n * Shuffles array in place. ES6 version\r\n * @param {Array} a items An array containing the items.\r\n */\r\nfunction shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n}\r\n\r\nlet icons = [\r\n    \"boba.png\",\r\n    \"vader.png\",\r\n    \"kenobi.png\",\r\n    \"r2d2.png\",\r\n    \"deathstar.png\",\r\n    \"millenium.png\",\r\n    \"trooper.png\",\r\n    \"babyyoda.png\",\r\n    \"tie.png\"\r\n];\r\n\r\nicons = icons.concat(icons);\r\nshuffle(icons);\r\n\r\nclass Game extends Component {\r\n\r\n    state = {\r\n        remaining: icons.length / 2,\r\n        clickedOnce: false,\r\n        currentCard: null,\r\n        newGameBtnDisabled: false,\r\n        movesCounter: 0\r\n    };\r\n\r\n    cardClickHandler = (card) => {\r\n        this.setState((prevState) => {\r\n            return (\r\n                { clickedOnce: !prevState.clickedOnce }\r\n            )\r\n        }, () => {\r\n            if (this.state.clickedOnce) {\r\n                card.classList.add(classesCard.visible);\r\n                this.setState({currentCard: card});\r\n            } else {\r\n                this.setState((prevState) => {\r\n                    return ({\r\n                        movesCounter: prevState.movesCounter + 1\r\n                    });\r\n                }, () => {\r\n                    card.classList.add(classesCard.visible);\r\n                    if (card.dataset.icon !== this.state.currentCard.dataset.icon) {\r\n                        const cards = document.querySelectorAll(`.${classesCard.Card}`);\r\n                        for (const card of cards) {\r\n                            card.style.pointerEvents = \"none\";\r\n                        }\r\n                        this.setState({newGameBtnDisabled: true});\r\n                        setTimeout(() => {\r\n                            card.classList.remove(classesCard.visible);\r\n                            this.state.currentCard.classList.remove(classesCard.visible);\r\n                            for (const card of cards) {\r\n                                card.style.pointerEvents = \"\";\r\n                            }\r\n                            this.setState({newGameBtnDisabled: false});\r\n                        }, 1000);\r\n                    } else {\r\n                        this.setState((prevState) => {\r\n                            return (\r\n                                {\r\n                                    remaining: prevState.remaining - 1\r\n                                }\r\n                            )\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    startNewGame = () => {\r\n        shuffle(icons);\r\n        const activeCards = document.querySelectorAll(`.${classesCard.visible}`)\r\n        for (const card of activeCards) {\r\n            card.classList.remove(classesCard.visible);\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({\r\n                remaining: icons.length / 2,\r\n                clickedOnce: false,\r\n                currentCard: null,\r\n                newGameBtnDisabled: false,\r\n                movesCounter: 0\r\n            });\r\n        }, 300);\r\n    };\r\n\r\n    render() {\r\n        const cards = icons.map((icon, index) => {\r\n            return (\r\n                <Card \r\n                    icon={icon} \r\n                    key={index}\r\n                    clicked={this.cardClickHandler}/>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className={classes.Game}>\r\n                <h1>stAr wArs</h1>\r\n                <h2>memory gAme</h2>\r\n                <div className={classes.cardsWrapper}>\r\n                    {this.state.remaining === 0 ? <div className={classes.winInfo}>YOU WIN</div> : cards}\r\n                </div>\r\n                <div className={classes.movesCounter}>Moves counter: {this.state.movesCounter}</div>\r\n                <button disabled={this.state.newGameBtnDisabled} onClick={this.startNewGame} className={classes.newGameBtn}>restart</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","import './App.css';\n\nimport Game from './Components/Game/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game_Game__1xxWl\",\"cardsWrapper\":\"Game_cardsWrapper__2VG9P\",\"movesCounter\":\"Game_movesCounter__3HjVm\",\"newGameBtn\":\"Game_newGameBtn__1ljSF\",\"winInfo\":\"Game_winInfo__3ej-T\"};"],"sourceRoot":""}